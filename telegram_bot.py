from datetime import datetime
import telebot
from telebot import types

from config import TELEGRAM_TOKEN, TELEGRAM_BOT_NAME
from models import db, User, AccessPoint

bot = telebot.TeleBot(TELEGRAM_TOKEN)

telegram_link = f"https://t.me/{TELEGRAM_BOT_NAME}"  # –ó–∞–º–µ–Ω–∏—Ç–µ 'YourBotUsername' –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞

@bot.message_handler(commands=['start'])
def send_welcome(message):
    args = message.text.split()
    if len(args) < 3:
        # –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /start <role> <device_id>")
        return

    role = args[1]
    device_id = args[2]

    telegram_id = str(message.from_user.id)
    name = message.from_user.first_name

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    user = db.query(User).filter_by(telegram_id=telegram_id).first()
    if user:
        bot.send_message(message.chat.id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
    else:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        new_user = User(
            device_id=device_id,
            telegram_id=telegram_id,
            name=name,
            role=role,
            registration_step='awaiting_phone'
        )
        db.add(new_user)
        db.commit()

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        button = types.KeyboardButton('üìû –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact=True)
        markup.add(button)

        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
            reply_markup=markup
        )

@bot.message_handler(content_types=['contact', 'text'])
def handle_contact_or_text(message):
    telegram_id = str(message.from_user.id)
    user = db.query(User).filter_by(telegram_id=telegram_id).first()

    if not user:
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
        )
        return

    if user.registration_step == 'awaiting_phone':
        if message.contact and message.contact.phone_number:
            # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user.phone_number = message.contact.phone_number
            user.registration_step = 'completed'
            db.commit()

            bot.send_message(message.chat.id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")

            if user.role == 'teacher':
                # –ï—Å–ª–∏ —Ä–æ–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π "–°–æ–∑–¥–∞—Ç—å —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞"
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                create_access_point_btn = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞")
                markup.add(create_access_point_btn)
                bot.send_message(message.chat.id, "–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
            else:
                # –ï—Å–ª–∏ —Ä–æ–ª—å –Ω–µ "teacher", –ø—Ä–æ—Å—Ç–æ —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
                markup = types.ReplyKeyboardRemove()
                bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!", reply_markup=markup)

        else:
            bot.send_message(
                message.chat.id,
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ."
            )
    elif user.registration_step == 'completed':
        bot.send_message(message.chat.id, "–í—ã —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!")
    else:
        bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —ç—Ç–∞–ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ")


@bot.message_handler(func=lambda message: message.text == "–°–æ–∑–¥–∞—Ç—å —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞")
def request_location_for_access_point(message):
    telegram_id = str(message.from_user.id)
    user = db.query(User).filter_by(telegram_id=telegram_id).first()

    if not user:
        bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.")
        return

    if user.role != 'teacher':
        bot.send_message(message.chat.id, "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º!")
        return

    user.registration_step = 'awaiting_ap_location'
    db.commit()

    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    location_button = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ—é –ª–æ–∫–∞—Ü–∏—é", request_location=True)
    markup.add(location_button)

    bot.send_message(
        message.chat.id,
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–µ–π –≥–µ–æ–ø–æ–∑–∏—Ü–∏–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞.",
        reply_markup=markup
    )

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏
@bot.message_handler(content_types=['location'])
def handle_location(message):
    telegram_id = str(message.from_user.id)
    user = db.query(User).filter_by(telegram_id=telegram_id).first()

    if not user:
        bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ.")
        return

    if user.role != 'teacher':
        bot.send_message(message.chat.id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞, —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å.")
        return

    if user.registration_step == 'awaiting_ap_location':
        longitude = message.location.longitude
        latitude = message.location.latitude

        new_access_point = AccessPoint(
            creation_date=datetime.utcnow(),
            longitude=str(longitude),
            latitude=str(latitude),
            creator_id=user.id
        )
        db.add(new_access_point)
        db.commit()

        user.registration_step = 'completed'
        db.commit()

        markup = types.ReplyKeyboardRemove()
        bot.send_message(
            message.chat.id,
            f"–¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!",
            reply_markup=markup
        )
    else:
        bot.send_message(message.chat.id, "–ú—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —É –≤–∞—Å –ª–æ–∫–∞—Ü–∏—é –¥–ª—è —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞.")